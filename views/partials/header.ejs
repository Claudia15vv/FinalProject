

<!DOCTYPE html>

<html>

  <head>
    
    <title><%= title %></title>
    

    <!--css from bottstrap-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <!--js bundle with popper from bootstrap-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>
    <!--for awesome-->
    <script src="https://kit.fontawesome.com/453b3a77a0.js" crossorigin="anonymous"></script>

    <link rel='stylesheet' href='/stylesheets/style.css' />
  
  <script>
    function showAddNewJob(){
        var newjob = document.getElementById('new-job');
        newjob.style.display = 'block';
    }
    
  </script>
  </head>
  <body>

    <!-- <h1><= title %> </h1> -->

 

    <div class="container d-flex justify-content-center">
      <div class="card at-5 p-4">
        <div class="header-img">
          <div class="apply-icon">
            <div class="dropdown">
              <a href="#" class="dropbtn"><img src ="/images/icons8-down-button-64.png"></a>
              <div class="dropdown-content">



                <ul>
                  <% if (!loggedIn) { %>
                  <li><a href="/login">Login</a></li>
                  <%} else { %> 
                  <li><a href="#" onclick="showAddNewJob();return false;">Add new Job</a></li>
                  <li><a href="/logout">Logout</a></li>
                   
    


                  <%} %>
              <ul>
              </div> 
            
            </div>

          </div>
          <div class="app-icon"><a href="/"><img src="/images/icons8-job-64 (4).png"></a></div>
    </div>
    
  

    <% if (loggedIn) {%> 
    <div id="new-job">
      <h2 class-="page-title">New Job</h2>

      <form action="/apply/new" method="POST" class = "search-form" id="searchFrom">

      <p><input type="text" name="applyName" placeholder="Name"></p>
      <p><input type="text" name="applyIcon" placeholder="Icon URL [http]"></p>
      <p><input type="text" name="applyUrl" placeholder="Apply Url [http]"></p>
      <p><button type="submit">Save</button></p>

    </form>
    </div>
    
    <%} %>

   

    <!-- About Us Page -->
<div class="tab">
  <button class="tablinks" onclick="openTab(event, 'AboutUs')">About Us</button>
</div>


<div id="AboutUs" class="tabcontent">
  <h4>Section 1: About who you are
      </h4>
      <p>As a senior computer science student, I initially did not expect to stick with this major for a long time. However, I have come to find a deep appreciation for the field and have enjoyed discovering the creative aspects of computer science.</p>
      <h4>Section 2: Project Description and why you choose this project
        </h4>
      <p>The project that I have created is an online job application organizer. It enables users to input, store, and organize job applications online. Users can input the name of the job, an image URL of the job logo, and a URL that takes them directly to the application page. They can then save the job application and list it for future reference. The application also offers the functionality to edit, delete, and mark job applications as completed. I chose this project because I was tired of having multiple job application tabs open and wanted to create an application that would help me streamline the process.</p>
      <h4>Section 3:Description of technology used for your site
      </h4>
      <p> To create this website, I used NodeJS and React with the EJS framework. The website uses a Mongoose (MongoDB) database with two collections, apply and users. The apply collection stores data from adding job application URLs, while the users collection is used for the login database. The delete function uses AJAX, and I used Bootstrap to make the website look visually appealing.</p>
      <h4>Section 4: What have you learned in this class
      </h4>
      <p>Throughout this class, I have learned how to build a website from scratch, and the highlight of the course was setting up a login feature. It was my first time using a database, so it was fascinating to see how everything works together</p>
      </div>
<script>
function openTab(event, tabName) {
// Hide all tab contents
var tabContents = document.getElementsByClassName("tabcontent");
for (var i = 0; i < tabContents.length; i++) {
tabContents[i].style.display = "none";
}

// Show the selected tab content
var tabContent = document.getElementById(tabName);
tabContent.style.display = "block";

// Set the active class to the selected tab button
var tabButtons = document.getElementsByClassName("tablinks");
for (var i = 0; i < tabButtons.length; i++) {
tabButtons[i].classList.remove("active");
}
event.currentTarget.classList.add("active");
}

</script>

 
<!--Site description-->
<div class="tab">
  <button class="tablinks" onclick="openTab(event, 'SiteDescription')">Site Description</button>
</div>


<div id="SiteDescription" class="tabcontent">
  <h3>Describe who are the users of your site
      </h3>
      <p>The users who are looking for jobs but have many tabs open and want a tool to help them organize and not have that many tabs open.</p>
      <h3>What is it that you want your users to get out of using the site
      </h3>
      <p>a better experience with applying with jobs because it can become overwhelming and seeing all those tabs does not help</p>
      <h3>What problem are you trying to solve for the users of the site
      </h3>
      <p>I do not want to see people with so many tabs open</p>
        
      <h3> What are the actions that you want the users to take once they have used your site
      </h3>
      <p>To feel like you accomplishes something</p>
        

      </div>
<script>
function openTab(event, tabName) {
// Hide all tab contents
var tabContents = document.getElementsByClassName("tabcontent");
for (var i = 0; i < tabContents.length; i++) {
tabContents[i].style.display = "none";
}

// Show the selected tab content
var tabContent = document.getElementById(tabName);
tabContent.style.display = "block";

// Set the active class to the selected tab button
var tabButtons = document.getElementsByClassName("tablinks");
for (var i = 0; i < tabButtons.length; i++) {
tabButtons[i].classList.remove("active");
}
event.currentTarget.classList.add("active");
}

</script>

<!--checklist Page-->
<div class="tab">
  <button class="tablinks" onclick="openTab(event, 'checkList')">Check List</button>
</div>


<div id="checkList" class="tabcontent">
  <h3>1. Database Usage
  </h3>
  <p>Database: Mongoose(MongoDB) </p>
  <p>Being used in: Login and AddNewJob </p>

  <h3>2. Ajax usage
  </h3>
  <p>Being used in: Delete function </p>
  
  <h3>3.Theme
  </h3>
  <p>Using: bootstrap and icon8</p>
  <p>Being used in: flexbox for job application list and dropdown menu </p>

  <h3>4. New Library Usage
  </h3>
  <p>Using: bootstrap and icon8</p>
  <p>Being used in: flexbox for job application list, dropdown menu, and icons at the top of website</p>

  <h3>5. Javascript Usage
  </h3>
  <p>Being used in: When you try to delete, it will give you an alert to make sure if you want to delete. </p>
  
  <h3>6. Membership Area
  </h3>
  <p>Being used in: a user can not use the "AddNewJob" functionality if they are not signed in</p>

  <h3>7. General User
  </h3>
  <p>Being used in: if you sign in with usename and password provided in teammindshift you will be able to access the functionalitys</p>
  
      </div>
<script>
function openTab(event, tabName) {
// Hide all tab contents
var tabContents = document.getElementsByClassName("tabcontent");
for (var i = 0; i < tabContents.length; i++) {
tabContents[i].style.display = "none";
}

// Show the selected tab content
var tabContent = document.getElementById(tabName);
tabContent.style.display = "block";

// Set the active class to the selected tab button
var tabButtons = document.getElementsByClassName("tablinks");
for (var i = 0; i < tabButtons.length; i++) {
tabButtons[i].classList.remove("active");
}
event.currentTarget.classList.add("active");
}

</script>

<div id="description">

  <h2>Hello, Welcome to JAO!
  </h2>
  <p>To use JAO (Job Application Organizer) and have a better experience when applying to jobs, follow these steps:</p>

  <p>1. Go to the JAO dropdown menu above and click on "Login" to create an account. </p>

  <p>2. After logging in, you will see a dropdown menu at the top of the page. Click on it and select "Add New Job."</p>

  <p>3. In the "Add New Job" page, you will be prompted to enter the name of the job you are applying for. You can also add an image URL of the company logo and an application URL that takes you directly to the application page. This will help you quickly access the job application without having to search for it each time.</p>

  <p>4. Once you have added all the necessary information, click on the "Save" button. Your new job will then appear in the list below.</p>

  <p>5. You can add as many jobs as you like to the list. To edit a job, click on the pencil icon next to the job listing. To delete a job, click on the trash can icon.</p>

  <p>6. You can also mark a job application as completed by clicking on the checkmark icon. This will help you keep track of which applications you have already submitted.</p>

  <p>With JAO, you can easily organize your job applications and have quick access to the necessary information, making the job application process less stressful and clutter-free.</p>

  
</div>













   
     



